// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Filter screen test Filter screen snapshot test should render correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flexDirection": "column",
      "flexGrow": 1,
      "justifyContent": "space-between",
    }
  }
>
  <RCTScrollView
    data={
      Array [
        Object {
          "id": 0,
          "label": "Filter berdasarkan provinsi dan kota",
        },
        Object {
          "id": 1,
          "label": "Filter berdasarkan size",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={0.1}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
        "paddingTop": 15,
      }
    }
    viewabilityConfigCallbackPairs={Array []}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderBottomColor": "#F3F3F3",
              "borderBottomWidth": 1,
              "paddingHorizontal": 20,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#606060",
                  "flexGrow": 1,
                  "fontSize": 12,
                  "paddingVertical": 20,
                }
              }
            >
              Filter berdasarkan provinsi dan kota
            </Text>
            <View
              accessibilityLabel="icon-check-available"
              accessibilityState={
                Object {
                  "disabled": true,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={false}
              hitSlop={
                Object {
                  "bottom": 15,
                  "left": 15,
                  "right": 15,
                  "top": 15,
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="icon-check-available"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 10,
                    },
                    Object {
                      "color": "#EF4941",
                    },
                    Object {
                      "fontFamily": "ColectionIcon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                юдК
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "paddingHorizontal": 20,
              }
            }
          />
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderBottomColor": "#F3F3F3",
              "borderBottomWidth": 1,
              "paddingHorizontal": 20,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#606060",
                  "flexGrow": 1,
                  "fontSize": 12,
                  "paddingVertical": 20,
                }
              }
            >
              Filter berdasarkan size
            </Text>
            <View
              accessibilityLabel="icon-check-available"
              accessibilityState={
                Object {
                  "disabled": true,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={false}
              hitSlop={
                Object {
                  "bottom": 15,
                  "left": 15,
                  "right": 15,
                  "top": 15,
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="icon-check-available"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 10,
                    },
                    Object {
                      "color": "#EF4941",
                    },
                    Object {
                      "fontFamily": "ColectionIcon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                юдв
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#EFEFEF",
        "borderRadius": 5,
        "borderTopWidth": 1,
        "padding": 20,
      }
    }
  >
    <View
      style={
        Object {
          "paddingBottom": 20,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="button-filter-order"
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Filter
          </Text>
        </View>
      </View>
    </View>
    <View>
      <View
        accessibilityRole="button"
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="button-clear-filter"
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
                Object {
                  "color": "#EF4941",
                },
              ]
            }
          >
            Reset
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
